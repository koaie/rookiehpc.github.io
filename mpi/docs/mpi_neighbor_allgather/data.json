{
    "Type":"Documentation",
    "Technology":"MPI",
    "Name":"MPI_Neighbor_allgather",
    "DirectoryName":"mpi_neighbor_allgather",
    "SharedDescription":true,
    "Description":"MPI_Neighbor_allgather is a neighbourhood collective operation that can be used on virtual topologies. It can be used on Cartesian virtual topologies, created with MPI_Cart_create; and graph virtual topologies created with MPI_Graph_create, MPI_Dist_graph_create or MPI_Dist_graph_create_adjacent. Variants include MPI_Neighbor_allgatherv. For the non-blocking version, refer to MPI_Ineighbor_allgather.",
    "Categories":[
        "Collectives",
        "Graph",
        "Topology"
    ],
    "Languages": [
        {
            "Language":"C",
            "Parameters": [
                {
                    "Name":"send_buffer",
                    "Description":"A pointer to the starting address of the send buffer. The send buffer is sent to each neighboring process.",
                    "Type":"const void*",
                    "Optional":false
                },
                {
                    "Name":"send_count",
                    "Description":"Number of elements sent to each neighbor.",
                    "Type":"int",
                    "Optional":false
                },
                {
                    "Name":"send_type",
                    "Description": "The type of one send buffer element.",
                    "Type": "MPI_Datatype",
                    "Optional":false
                },
                {
                    "Name": "receive_buffer",
                    "Description": "The buffer in which store the gathered data. The buffer stores the l-th block which is received from the l-th neighbor.",
                    "Type": "void*",
                    "Optional":false
                },
                {
                    "Name":"receive_count",
                    "Description":"Number of elements received from each neighbor.",
                    "Type":"int",
                    "Optional":false
                },
                {
                    "Name":"receive_type",
                    "Description": "The type of one receive buffer element.",
                    "Type": "MPI_Datatype",
                    "Optional":false
                },
                {
                    "Name":"communicator",
                    "Description": "The topology communicator in which the variable all-to-all takes place.",
                    "Type": "MPI_Comm",
                    "Optional":false
                }
            ],
            "Return":
                {
                    "Type":"int",
                    "Description":"The error code returned from the operation.\n- MPI_SUCCESS: the routine successfully completed."
                }
        }
    ]
}